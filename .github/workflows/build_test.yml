name: build and test QSYM
on: [push]
jobs:
  prep:
    runs-on: ubuntu-latest
    env:
      DESTDIR: "."
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

  build-1604:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/wideglide/qsym:16.04
    needs: prep
    env:
      DESTDIR: "."
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: apt-get -qq update
      - run: apt-get -qq install -y build-essential gcc-multilib g++-multilib libstdc++6 libpython-dev python-pip python-virtualenv unzip sudo wget lsb-release
      - run: /root/venv_qsym/bin/pip -V
      - run: ldconfig
      - run: cat /proc/sys/kernel/yama/ptrace_scope
      - run: /root/venv_qsym/bin/pip install .
      - run: (cd tests && /root/venv_qsym/bin/python build.py)
      - run: cd tests && /root/venv_qsym/bin/python -m pytest
      - run: uname -a
